@use "sass:math";
@use "variable" as *;

@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }
  @return $number;
}

@function vw($number, $width: $mobile) {
  @return calc(
    var(--vw, 1vw) * #{strip-unit($number)} / #{strip-unit($width)} * 100
  );
}

@function vmax($number, $width: $mobile) {
  @return calc(
    max(var(--vw, 1vw), var(--svh, 1vh)) * #{strip-unit($number)} / #{strip-unit(
        $width
      )} * 100
  );
}

@function vmin($number, $width: $mobile) {
  @return calc(
    min(var(--vw, 1vw), var(--svh, 1vh)) * #{strip-unit($number)} / #{strip-unit(
        $width
      )} * 100
  );
}

@function length($number) {
  $number: strip-unit($number);
  @return min(vmin($number), $number * 1.5 * 1px);
}
@function length-md($number) {
  $number: strip-unit($number);
  @return min(vw($number, $desktop), $number * 1.25 * 1px);
}

@function font-length($length, $width: $mobile) {
  $length: strip-unit($length);

  @return min(
    calc(
      #{$length * 0.1rem} + (
          min(var(--vw, 1vw), var(--svh, 1vh)) * 100 - #{$width}
        ) * #{math.div($length, strip-unit($width))}
    ),
    #{$length * 1.5 * 0.1}rem
  );
}

// デフォルトはPCデザインの87.5% - 112.5%まで拡大縮小する
// 等倍で拡大縮小させたいときは$scaleを0.25とする
// ただし等倍はズームに応じて大きさが変化しなくなる
@function font-length-md($length, $scale: 0.25 * 0.5) {
  $length: strip-unit($length);

  @return min(
    calc(
      #{$length * 0.1rem} + #{$length * $scale} *
        (var(--vw, 1vw) * 100 - #{$desktop}) / #{strip-unit($desktop * 0.25)}
    ),
    #{($length * ($scale + 1)) * 0.1rem}
  );
}

// https://css-tricks.com/simplified-fluid-typography/
@function fluid-length($min-length, $max-length, $min-vw, $max-vw) {
  @return clamp(
    $min-length,
    calc(
      #{$min-length} + #{strip-unit($max-length - $min-length)} *
        (var(--vw, 1vw) * 100 - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}
    ),
    $max-length
  );
}
